plugins {
  id "java"
  id "org.springframework.boot" version "3.0.9"
  id "io.spring.dependency-management" version "1.1.2"
}

group = "io.hskim"
version = "0.0.1-SNAPSHOT"

java {
  sourceCompatibility = "17"
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

gradle.taskGraph.beforeTask { Task task ->
  println "$task Start at " + new Date().format("yyyy-MM-dd HH:mm:ss")
}

gradle.taskGraph.afterTask { Task task, TaskState state ->
  if (state.failure) {
    println "$task Failed at " + new Date().format("yyyy-MM-dd HH:mm:ss")
  }
  else {
    println "$task Done at " + new Date().format("yyyy-MM-dd HH:mm:ss")
  }
}

ext {
  set("springCloudVersion", "2022.0.3")
}

dependencies {
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
  compileOnly "org.projectlombok:lombok"
  developmentOnly "org.springframework.boot:spring-boot-devtools"
  annotationProcessor "org.projectlombok:lombok"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  implementation "com.h2database:h2"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  implementation "org.modelmapper:modelmapper:3.1.1"
  implementation "org.springframework.boot:spring-boot-starter-security"
  testImplementation "org.springframework.security:spring-security-test"
  implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"
  implementation "io.jsonwebtoken:jjwt:0.9.1"
  implementation "javax.xml.bind:jaxb-api:2.3.1"
  implementation "org.springframework.cloud:spring-cloud-starter-config"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.cloud:spring-cloud-starter-bus-amqp"
  implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
  implementation "org.mariadb.jdbc:mariadb-java-client"
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.named("test") {
  useJUnitPlatform()
}
